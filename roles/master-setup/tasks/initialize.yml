---
- name: Find if pg cluster already exists.
  find: paths="{{ pg_data }}" file_type=file patterns="PG_VERSION"
  register: pg_dir

- name: Initialize database. Skip this if already exists.
  command: /usr/pgsql-{{ postgresql_version }}/bin/initdb --data-checksum -D {{ pg_data }} 
  become: yes
  become_user: "{{ postgresql_admin_user }}"
  when: pg_dir.matched|int == 0

- name: Create postmaster.opts. So initial pg_ctl restart will work.
  lineinfile:
     path: "{{ pg_data }}/postmaster.opts"
     line: /usr/pgsql-{{ postgresql_version }}/bin/postgres
     create: yes
  become: yes
  become_user: "{{ postgresql_admin_user }}"

- name: copy postgresql config files
  template:
    src: '{{ item }}'
    dest: /var/lib/pgsql/11/data
    mode: 0600
    owner: postgres
    group: postgres
  with_fileglob: files/*

- name: create ssh dir for barman
  file:
    path: "/var/lib/pgsql/.ssh"
    state: directory
    owner: postgres
    group: postgres
    mode: 0700

- name: copy ssh keys
  copy: src=files/.ssh/{{ item }} dest=/var/lib/pgsql/.ssh/ mode=0600 owner=postgres group=postgres
  with_items:
    - id_rsa
    - id_rsa.pub
    - known_hosts

- name: restart postgres pg_ctl
  command: /usr/pgsql-{{ postgresql_version }}/bin/pg_ctl -D {{ pg_data }} start 
  become: yes
  become_user: "{{ postgresql_admin_user }}"

- name: create slot
  become_user: postgres
  shell: psql -U postgres -c "SELECT pg_create_physical_replication_slot('replica')"

- name: create streaming user
  become_user: postgres
  shell: psql -U postgres -c "CREATE USER replica WITH REPLICATION PASSWORD '123'"
